name: Docker Image CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate Tag
      id: tag
      run: echo "tag=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
      
    - name: Install node
      uses: actions/setup-node@v4
      with:
        node-version: '21.1'

    - name: Install dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build
      run: dotnet publish
      working-directory: ./src/DeploymentCenter

    - name: Run Tests
      run: dotnet test
      working-directory: ./src/DeploymentCenter
      
    - name: Copy Output
      run: |
        cp -r ./DeploymentCenter/bin/Release/net8.0/publish .
        ls -l
      working-directory: ./src/DeploymentCenter

    - name: Build
      run: dotnet publish
      working-directory: ./src/DeploymentCenter.Frontend

    - name: Run Tests
      run: dotnet test
      working-directory: ./src/DeploymentCenter.Frontend
      
    - name: Copy Output
      run: |
        cp -r ./DeploymentCenter.Frontend.Server/bin/Release/net8.0/publish .
        ls -l
      working-directory: ./src/DeploymentCenter.Frontend

    - name: 'Upload Artifact Api'
      uses: actions/upload-artifact@v4
      with:
        name: deployment-center-api
        path: ./src/DeploymentCenter/net8.0/publish
        retention-days: 1

    - name: 'Upload Artifact Frontend'
      uses: actions/upload-artifact@v4
      with:
        name: deployment-center-frontend
        path: ./src/DeploymentCenter.Frontend/net8.0/publish
        retention-days: 1

  release-api:
      runs-on: ubuntu-latest
      environment: prod
      steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-center-api
          path: ./src/DeploymentCenter/publish
      
      - name: Docker Build
        run: |
          ls -l
          docker build -t dulik65/deployment-center-api:${{ env.tag }} .
        working-directory: ./src/DeploymentCenter
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Docker Push
        run: docker push dulik65/deployment-center-api:${{ env.tag }}
        
  release-frontend:
      runs-on: ubuntu-latest
      environment: prod
      steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-center-frontend
          path: ./src/DeploymentCenter.Frontend/publish
          
      - name: Docker Build
        run: |
          ls -l
          docker build -t dulik65/deployment-center-frontend:${{ env.tag }} .
        working-directory: ./src/DeploymentCenter.Frontend
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Docker Push
        run: docker push dulik65/deployment-center-frontend:${{ env.tag }}
